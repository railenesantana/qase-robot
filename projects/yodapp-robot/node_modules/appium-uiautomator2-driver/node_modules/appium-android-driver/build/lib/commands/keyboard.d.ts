/**
 * @this {import('../driver').AndroidDriver}
 * @returns {Promise<boolean>}
 */
export function hideKeyboard(this: import("../driver").AndroidDriver): Promise<boolean>;
/**
 * @this {import('../driver').AndroidDriver}
 * @returns {Promise<boolean>}
 */
export function isKeyboardShown(this: import("../driver").AndroidDriver): Promise<boolean>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|string[]} keys
 * @returns {Promise<void>}
 */
export function keys(this: import("../driver").AndroidDriver, keys: string | string[]): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').SendKeysOpts} params
 * @returns {Promise<void>}
 */
export function doSendKeys(this: import("../driver").AndroidDriver, params: import("./types").SendKeysOpts): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|number} keycode
 * @param {number} [metastate]
 * @returns {Promise<void>}
 */
export function keyevent(this: import("../driver").AndroidDriver, keycode: string | number, metastate?: number | undefined): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|number} keycode
 * @param {number} [metastate]
 * @returns {Promise<void>}
 */
export function pressKeyCode(this: import("../driver").AndroidDriver, keycode: string | number, metastate?: number | undefined): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|number} keycode
 * @param {number} [metastate]
 * @returns {Promise<void>}
 */
export function longPressKeyCode(this: import("../driver").AndroidDriver, keycode: string | number, metastate?: number | undefined): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').PerformEditorActionOpts} opts
 * @returns {Promise<void>}
 */
export function mobilePerformEditorAction(this: import("../driver").AndroidDriver, opts: import("./types").PerformEditorActionOpts): Promise<void>;
/**
 * @deprecated
 * @this {import('../driver').AndroidDriver}
 * @returns {Promise<string?>}
 */
export function initUnicodeKeyboard(this: import("../driver").AndroidDriver): Promise<string | null>;
/**
 * @this {import('../driver').AndroidDriver}
 * @returns {Promise<void>}
 */
export function hideKeyboardCompletely(this: import("../driver").AndroidDriver): Promise<void>;
//# sourceMappingURL=keyboard.d.ts.map
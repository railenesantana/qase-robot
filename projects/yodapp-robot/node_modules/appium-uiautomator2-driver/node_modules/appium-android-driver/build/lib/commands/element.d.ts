/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} attribute
 * @param {string} elementId
 * @returns {Promise<string?>}
 */
export function getAttribute(this: import("../driver").AndroidDriver, attribute: string, elementId: string): Promise<string | null>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<void>}
 */
export function click(this: import("../driver").AndroidDriver, elementId: string): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<string>}
 */
export function getText(this: import("../driver").AndroidDriver, elementId: string): Promise<string>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<import('@appium/types').Position>}
 */
export function getLocation(this: import("../driver").AndroidDriver, elementId: string): Promise<import("@appium/types").Position>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<import('@appium/types').Size>}
 */
export function getSize(this: import("../driver").AndroidDriver, elementId: string): Promise<import("@appium/types").Size>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<string>}
 */
export function getName(this: import("../driver").AndroidDriver, elementId: string): Promise<string>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<boolean>}
 */
export function elementDisplayed(this: import("../driver").AndroidDriver, elementId: string): Promise<boolean>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<boolean>}
 */
export function elementEnabled(this: import("../driver").AndroidDriver, elementId: string): Promise<boolean>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<boolean>}
 */
export function elementSelected(this: import("../driver").AndroidDriver, elementId: string): Promise<boolean>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|string[]} keys
 * @param {string} elementId
 * @param {boolean} [replace=false]
 * @returns {Promise<void>}
 */
export function setElementValue(this: import("../driver").AndroidDriver, keys: string | string[], elementId: string, replace?: boolean | undefined): Promise<void>;
/**
 * Reason for isolating doSetElementValue from setElementValue is for reusing setElementValue
 * across android-drivers (like appium-uiautomator2-driver) and to avoid code duplication.
 * Other android-drivers (like appium-uiautomator2-driver) need to override doSetElementValue
 * to facilitate setElementValue.
 *
 * @this {import('../driver').AndroidDriver}
 * @param {import('./types').DoSetElementValueOpts} params
 * @returns {Promise<void>}
 */
export function doSetElementValue(this: import("../driver").AndroidDriver, params: import("./types").DoSetElementValueOpts): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|string[]} keys
 * @param {string} elementId
 * @returns {Promise<void>}
 */
export function setValue(this: import("../driver").AndroidDriver, keys: string | string[], elementId: string): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|string[]} keys
 * @param {string} elementId
 * @returns {Promise<void>}
 */
export function replaceValue(this: import("../driver").AndroidDriver, keys: string | string[], elementId: string): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string|string[]} keys
 * @param {string} elementId
 * @returns {Promise<void>}
 */
export function setValueImmediate(this: import("../driver").AndroidDriver, keys: string | string[], elementId: string): Promise<void>;
/**
 * @this {import('../driver').AndroidDriver}
 * @param {string} elementId
 * @returns {Promise<import('@appium/types').Position>}
 */
export function getLocationInView(this: import("../driver").AndroidDriver, elementId: string): Promise<import("@appium/types").Position>;
//# sourceMappingURL=element.d.ts.map
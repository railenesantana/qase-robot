export default keyboardCommands;
export type KeyboardState = {
    /**
     * - Whether soft keyboard is currently visible.
     */
    isKeyboardShown: boolean;
    /**
     * - Whether the keyboard can be closed.
     */
    canCloseKeyboard: boolean;
};
export type KeyboardCommands = typeof keyboardCommands;
declare namespace keyboardCommands {
    /**
     * Hides software keyboard if it is visible.
     * Noop if the keyboard is already hidden.
     *
     * @this {import('../adb.js').ADB}
     * @param {number} [timeoutMs=1000] For how long to wait (in milliseconds)
     * until the keyboard is actually hidden.
     * @returns {Promise<boolean>} `false` if the keyboard was already hidden
     * @throws {Error} If the keyboard cannot be hidden.
     */
    function hideKeyboard(this: import("../adb.js").ADB, timeoutMs?: number | undefined): Promise<boolean>;
    /**
     * @typedef {Object} KeyboardState
     * @property {boolean} isKeyboardShown - Whether soft keyboard is currently visible.
     * @property {boolean} canCloseKeyboard - Whether the keyboard can be closed.
     */
    /**
     * Retrieve the state of the software keyboard on the device under test.
     *
     * @this {import('../adb.js').ADB}
     * @return {Promise<KeyboardState>} The keyboard state.
     */
    function isSoftKeyboardPresent(this: import("../adb.js").ADB): Promise<KeyboardState>;
}
//# sourceMappingURL=keyboard-commands.d.ts.map
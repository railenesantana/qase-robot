"use strict";
/**
 * @privateRemarks This is a `.ts` file so we can re-export types from other
 * files; otherwise we would need to copy `@typedef`s around.
 * @module
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAndroidBinaryPath = void 0;
const adb_commands_1 = __importDefault(require("./adb-commands"));
const android_manifest_1 = __importDefault(require("./android-manifest"));
const system_calls_1 = __importStar(require("./system-calls"));
Object.defineProperty(exports, "getAndroidBinaryPath", { enumerable: true, get: function () { return system_calls_1.getAndroidBinaryPath; } });
const apk_signing_1 = __importDefault(require("./apk-signing"));
const apk_utils_1 = __importDefault(require("./apk-utils"));
const apks_utils_1 = __importDefault(require("./apks-utils"));
const aab_utils_1 = __importDefault(require("./aab-utils"));
const adb_emu_commands_1 = __importDefault(require("./adb-emu-commands"));
const lockmgmt_1 = __importDefault(require("./lockmgmt"));
const keyboard_commands_1 = __importDefault(require("./keyboard-commands"));
Object.assign(adb_commands_1.default, android_manifest_1.default, system_calls_1.default, adb_emu_commands_1.default, apk_signing_1.default, apk_utils_1.default, apks_utils_1.default, aab_utils_1.default, lockmgmt_1.default, keyboard_commands_1.default);
exports.default = adb_commands_1.default;
//# sourceMappingURL=index.js.map